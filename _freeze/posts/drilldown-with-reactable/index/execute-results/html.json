{
  "hash": "88efc853ad66560840a7ef1563a76945",
  "result": {
    "markdown": "---\ntitle: \"Interactive Drill-down Tables using {reactable}\"\nsubtitle: \"How to create multi-level tables with hidden rows\"\nabstract: \"This post demonstrates how to use the {reactable} package to create multi-level drill-down tables having hidden rows\"\nauthor: Vishal Katti\ndate: 2021-07-27\nimage: https://i.imgur.com/Zzk5SWf.gif\ncategories: [R, reactable, drill-down]\ncitation: true\nlicense: \"CC BY\"\n---\n\n\n\n\nWe often come across denormalized data that has 2 or more levels of information. For example, top-level info like course info with data fields like course id, course name, description, start/end date and second-level info like student info with data fields like with student id, student name, age and gender. We may also have these two groups of data as separate tables with a primary-key foreign-key design, usually from a well-designed SQL database.\n\n::: callout-note\nIf you are reading this article from anywhere except https://vishalkatti.com, you may not see some of the interactive elements below. Go to [original post here](https://www.vishalkatti.com/posts/drilldown-with-reactable/)\n:::\n\nLet us create some data.\n\n## Top-Level data: **course**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, quietly = TRUE, warn.conflicts = FALSE)\nlibrary(rmarkdown, quietly = TRUE, warn.conflicts = FALSE)\n\ncourse <- tibble(course_id   = 1:4,\n                 course_name = paste(\"Course\", LETTERS[1:4]),\n                 start_date  = seq.Date(from = lubridate::as_date(\"2021-01-01\"), by = \"month\", length.out = 4),\n                 end_date    = lubridate::ceiling_date(start_date, unit = \"month\") - 1)\n\npaged_table(course)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"course_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"course_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"start_date\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"end_date\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Course A\",\"3\":\"2021-01-01\",\"4\":\"2021-01-31\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\"},{\"1\":\"4\",\"2\":\"Course D\",\"3\":\"2021-04-01\",\"4\":\"2021-04-30\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Second Level Data: **student**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nstudent <- tibble(s_id      = 1:20,\n                  s_name    = paste(\"Student\", LETTERS[1:20]),\n                  gender    = sample(c(\"X\",\"Y\",\"Z\"), 20, replace = TRUE),\n                  age       = sample(18:35, 20, replace = TRUE),\n                  course_id = sample(1:4, 20, replace = TRUE))\n\npaged_table(student)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"s_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"s_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"course_id\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Student A\",\"3\":\"X\",\"4\":\"21\",\"5\":\"3\"},{\"1\":\"2\",\"2\":\"Student B\",\"3\":\"X\",\"4\":\"22\",\"5\":\"4\"},{\"1\":\"3\",\"2\":\"Student C\",\"3\":\"X\",\"4\":\"30\",\"5\":\"3\"},{\"1\":\"4\",\"2\":\"Student D\",\"3\":\"X\",\"4\":\"22\",\"5\":\"1\"},{\"1\":\"5\",\"2\":\"Student E\",\"3\":\"Y\",\"4\":\"19\",\"5\":\"1\"},{\"1\":\"6\",\"2\":\"Student F\",\"3\":\"Y\",\"4\":\"25\",\"5\":\"2\"},{\"1\":\"7\",\"2\":\"Student G\",\"3\":\"Y\",\"4\":\"20\",\"5\":\"2\"},{\"1\":\"8\",\"2\":\"Student H\",\"3\":\"X\",\"4\":\"18\",\"5\":\"2\"},{\"1\":\"9\",\"2\":\"Student I\",\"3\":\"Z\",\"4\":\"27\",\"5\":\"2\"},{\"1\":\"10\",\"2\":\"Student J\",\"3\":\"Z\",\"4\":\"28\",\"5\":\"2\"},{\"1\":\"11\",\"2\":\"Student K\",\"3\":\"X\",\"4\":\"32\",\"5\":\"4\"},{\"1\":\"12\",\"2\":\"Student L\",\"3\":\"X\",\"4\":\"25\",\"5\":\"3\"},{\"1\":\"13\",\"2\":\"Student M\",\"3\":\"Y\",\"4\":\"21\",\"5\":\"2\"},{\"1\":\"14\",\"2\":\"Student N\",\"3\":\"Y\",\"4\":\"21\",\"5\":\"1\"},{\"1\":\"15\",\"2\":\"Student O\",\"3\":\"Y\",\"4\":\"35\",\"5\":\"2\"},{\"1\":\"16\",\"2\":\"Student P\",\"3\":\"Z\",\"4\":\"30\",\"5\":\"3\"},{\"1\":\"17\",\"2\":\"Student Q\",\"3\":\"Z\",\"4\":\"22\",\"5\":\"2\"},{\"1\":\"18\",\"2\":\"Student R\",\"3\":\"X\",\"4\":\"21\",\"5\":\"2\"},{\"1\":\"19\",\"2\":\"Student S\",\"3\":\"X\",\"4\":\"19\",\"5\":\"2\"},{\"1\":\"20\",\"2\":\"Student T\",\"3\":\"Z\",\"4\":\"35\",\"5\":\"4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nIf we are sourcing data from a database, it is probable that you would see these 2 levels of data in 2 separate tables/views, but most business users are comfortable with MS Excel and want **all the data in one sheet**!!\n\nSo the data actually looks something like this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_df <- left_join(course, student, by = \"course_id\")\n\npaged_table(combined_df)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"course_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"course_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"start_date\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"end_date\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"s_id\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"s_name\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Course A\",\"3\":\"2021-01-01\",\"4\":\"2021-01-31\",\"5\":\"4\",\"6\":\"Student D\",\"7\":\"X\",\"8\":\"22\"},{\"1\":\"1\",\"2\":\"Course A\",\"3\":\"2021-01-01\",\"4\":\"2021-01-31\",\"5\":\"5\",\"6\":\"Student E\",\"7\":\"Y\",\"8\":\"19\"},{\"1\":\"1\",\"2\":\"Course A\",\"3\":\"2021-01-01\",\"4\":\"2021-01-31\",\"5\":\"14\",\"6\":\"Student N\",\"7\":\"Y\",\"8\":\"21\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"6\",\"6\":\"Student F\",\"7\":\"Y\",\"8\":\"25\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"7\",\"6\":\"Student G\",\"7\":\"Y\",\"8\":\"20\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"8\",\"6\":\"Student H\",\"7\":\"X\",\"8\":\"18\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"9\",\"6\":\"Student I\",\"7\":\"Z\",\"8\":\"27\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"10\",\"6\":\"Student J\",\"7\":\"Z\",\"8\":\"28\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"13\",\"6\":\"Student M\",\"7\":\"Y\",\"8\":\"21\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"15\",\"6\":\"Student O\",\"7\":\"Y\",\"8\":\"35\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"17\",\"6\":\"Student Q\",\"7\":\"Z\",\"8\":\"22\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"18\",\"6\":\"Student R\",\"7\":\"X\",\"8\":\"21\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"19\",\"6\":\"Student S\",\"7\":\"X\",\"8\":\"19\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\",\"5\":\"1\",\"6\":\"Student A\",\"7\":\"X\",\"8\":\"21\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\",\"5\":\"3\",\"6\":\"Student C\",\"7\":\"X\",\"8\":\"30\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\",\"5\":\"12\",\"6\":\"Student L\",\"7\":\"X\",\"8\":\"25\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\",\"5\":\"16\",\"6\":\"Student P\",\"7\":\"Z\",\"8\":\"30\"},{\"1\":\"4\",\"2\":\"Course D\",\"3\":\"2021-04-01\",\"4\":\"2021-04-30\",\"5\":\"2\",\"6\":\"Student B\",\"7\":\"X\",\"8\":\"22\"},{\"1\":\"4\",\"2\":\"Course D\",\"3\":\"2021-04-01\",\"4\":\"2021-04-30\",\"5\":\"11\",\"6\":\"Student K\",\"7\":\"X\",\"8\":\"32\"},{\"1\":\"4\",\"2\":\"Course D\",\"3\":\"2021-04-01\",\"4\":\"2021-04-30\",\"5\":\"20\",\"6\":\"Student T\",\"7\":\"Z\",\"8\":\"35\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nDisplaying such data in a table causes all the top-level data fields to repeat for every second-level record. You can see that `course_id`, `course_name`, `start_date` and `end_date` columns repeat for all students who enrolled in the same course. Take a moment to think about how would you display such data in an interactive table in a web page, HTML report or Shiny app.\n\nIt is advisable to split such denormalized data into normalized data i.e. create the original top-level and second level tables from the `combined_df`.\n\n## Vanilla `reactable`\n\nOne of my favorite R packages is `{reactable}`. The default output creates a neat interactive table with pagination (if data has more than 10 rows) and ability to sort columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reactable, quietly = TRUE, warn.conflicts = FALSE)\n\nreactable(data = combined_df)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-0420b066e36ce9489c4b\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0420b066e36ce9489c4b\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4],\"course_name\":[\"Course A\",\"Course A\",\"Course A\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course C\",\"Course C\",\"Course C\",\"Course C\",\"Course D\",\"Course D\",\"Course D\"],\"start_date\":[\"2021-01-01\",\"2021-01-01\",\"2021-01-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-04-01\",\"2021-04-01\",\"2021-04-01\"],\"end_date\":[\"2021-01-31\",\"2021-01-31\",\"2021-01-31\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-04-30\",\"2021-04-30\",\"2021-04-30\"],\"s_id\":[4,5,14,6,7,8,9,10,13,15,17,18,19,1,3,12,16,2,11,20],\"s_name\":[\"Student D\",\"Student E\",\"Student N\",\"Student F\",\"Student G\",\"Student H\",\"Student I\",\"Student J\",\"Student M\",\"Student O\",\"Student Q\",\"Student R\",\"Student S\",\"Student A\",\"Student C\",\"Student L\",\"Student P\",\"Student B\",\"Student K\",\"Student T\"],\"gender\":[\"X\",\"Y\",\"Y\",\"Y\",\"Y\",\"X\",\"Z\",\"Z\",\"Y\",\"Y\",\"Z\",\"X\",\"X\",\"X\",\"X\",\"X\",\"Z\",\"X\",\"X\",\"Z\"],\"age\":[22,19,21,25,20,18,27,28,21,35,22,21,19,21,30,25,30,22,32,35]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"course_id\",\"type\":\"numeric\"},{\"accessor\":\"course_name\",\"name\":\"course_name\",\"type\":\"character\"},{\"accessor\":\"start_date\",\"name\":\"start_date\",\"type\":\"Date\"},{\"accessor\":\"end_date\",\"name\":\"end_date\",\"type\":\"Date\"},{\"accessor\":\"s_id\",\"name\":\"s_id\",\"type\":\"numeric\"},{\"accessor\":\"s_name\",\"name\":\"s_name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"gender\",\"type\":\"character\"},{\"accessor\":\"age\",\"name\":\"age\",\"type\":\"numeric\"}],\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"dataKey\":\"413c1f3c101a174f7070712d78c69feb\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Basic Formatting\n\nWith some additional tweaks, we can make it look better.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data       = combined_df,\n  compact    = TRUE, # for minimum row height\n  filterable = TRUE, # for individual column filters\n  striped    = TRUE, # banded rows\n  resizable  = TRUE, # for resizable column widths\n  columns    = list( # define custom header name, width, alignment etc.\n    course_id   = colDef(name = \"CID\",         width = 50,  align = \"center\"),\n    course_name = colDef(name = \"Course Name\", width = 140),\n    start_date  = colDef(name = \"Start Date\",  width = 120, align = \"center\"),\n    end_date    = colDef(name = \"End Date\",    width = 120, align = \"center\"),\n    s_id        = colDef(name = \"SID\",         width = 70,  align = \"center\"),\n    s_name      = colDef(name = \"Student Name\"),\n    gender      = colDef(name = \"Gender\",      width = 80,  align = \"center\"),\n    age         = colDef(name = \"Age\",         width = 50)\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-d308ea22dc0f64dbf7ed\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d308ea22dc0f64dbf7ed\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4],\"course_name\":[\"Course A\",\"Course A\",\"Course A\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course C\",\"Course C\",\"Course C\",\"Course C\",\"Course D\",\"Course D\",\"Course D\"],\"start_date\":[\"2021-01-01\",\"2021-01-01\",\"2021-01-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-04-01\",\"2021-04-01\",\"2021-04-01\"],\"end_date\":[\"2021-01-31\",\"2021-01-31\",\"2021-01-31\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-04-30\",\"2021-04-30\",\"2021-04-30\"],\"s_id\":[4,5,14,6,7,8,9,10,13,15,17,18,19,1,3,12,16,2,11,20],\"s_name\":[\"Student D\",\"Student E\",\"Student N\",\"Student F\",\"Student G\",\"Student H\",\"Student I\",\"Student J\",\"Student M\",\"Student O\",\"Student Q\",\"Student R\",\"Student S\",\"Student A\",\"Student C\",\"Student L\",\"Student P\",\"Student B\",\"Student K\",\"Student T\"],\"gender\":[\"X\",\"Y\",\"Y\",\"Y\",\"Y\",\"X\",\"Z\",\"Z\",\"Y\",\"Y\",\"Z\",\"X\",\"X\",\"X\",\"X\",\"X\",\"Z\",\"X\",\"X\",\"Z\"],\"age\":[22,19,21,25,20,18,27,28,21,35,22,21,19,21,30,25,30,22,32,35]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"CID\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"},{\"accessor\":\"course_name\",\"name\":\"Course Name\",\"type\":\"character\",\"width\":140},{\"accessor\":\"start_date\",\"name\":\"Start Date\",\"type\":\"Date\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"end_date\",\"name\":\"End Date\",\"type\":\"Date\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":80,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"striped\":true,\"compact\":true,\"dataKey\":\"37ac57f783425a81c3f289334adfb3a2\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nHowever, the problem of repeating top-level fields still persists.\n\n## Grouping and Aggregating\n\n`{reactable}` has a **groupBy** argument which lets us combined rows with common data fields and the **aggregate** argument inside `colDef` lets us define what aggregation to be used for each column of the top-level data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data       = combined_df,\n  compact    = TRUE, # for minimum row height\n  filterable = TRUE, # for individual column filters\n  striped    = TRUE, # banded rows\n  resizable  = TRUE, # for resizable column widths\n  groupBy    = \"course_id\",\n  columns    = list(\n    # show count of students in each course\n    course_id   = colDef(name = \"CID\",         width = 100,  align = \"left\",    aggregate = \"count\"),  \n    # show unique course name\n    course_name = colDef(name = \"Course Name\", width = 140,                     aggregate = \"unique\"), \n    # show unique start date\n    start_date  = colDef(name = \"Start Date\",  width = 120,  align = \"center\",  aggregate = \"unique\"), \n    # show unique end date\n    end_date    = colDef(name = \"End Date\",    width = 120,  align = \"center\",  aggregate = \"unique\"), \n    s_id        = colDef(name = \"SID\",         width = 70,   align = \"center\"),\n    s_name      = colDef(name = \"Student Name\"),\n    gender      = colDef(name = \"Gender\",      width = 80,   align = \"center\"),\n    age         = colDef(name = \"Age\",         width = 50)\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-44db758151977091446d\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-44db758151977091446d\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4],\"course_name\":[\"Course A\",\"Course A\",\"Course A\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course C\",\"Course C\",\"Course C\",\"Course C\",\"Course D\",\"Course D\",\"Course D\"],\"start_date\":[\"2021-01-01\",\"2021-01-01\",\"2021-01-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-04-01\",\"2021-04-01\",\"2021-04-01\"],\"end_date\":[\"2021-01-31\",\"2021-01-31\",\"2021-01-31\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-04-30\",\"2021-04-30\",\"2021-04-30\"],\"s_id\":[4,5,14,6,7,8,9,10,13,15,17,18,19,1,3,12,16,2,11,20],\"s_name\":[\"Student D\",\"Student E\",\"Student N\",\"Student F\",\"Student G\",\"Student H\",\"Student I\",\"Student J\",\"Student M\",\"Student O\",\"Student Q\",\"Student R\",\"Student S\",\"Student A\",\"Student C\",\"Student L\",\"Student P\",\"Student B\",\"Student K\",\"Student T\"],\"gender\":[\"X\",\"Y\",\"Y\",\"Y\",\"Y\",\"X\",\"Z\",\"Z\",\"Y\",\"Y\",\"Z\",\"X\",\"X\",\"X\",\"X\",\"X\",\"Z\",\"X\",\"X\",\"Z\"],\"age\":[22,19,21,25,20,18,27,28,21,35,22,21,19,21,30,25,30,22,32,35]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"CID\",\"type\":\"numeric\",\"aggregate\":\"count\",\"width\":100,\"align\":\"left\"},{\"accessor\":\"course_name\",\"name\":\"Course Name\",\"type\":\"character\",\"aggregate\":\"unique\",\"width\":140},{\"accessor\":\"start_date\",\"name\":\"Start Date\",\"type\":\"Date\",\"aggregate\":\"unique\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"end_date\",\"name\":\"End Date\",\"type\":\"Date\",\"aggregate\":\"unique\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":80,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50}],\"pivotBy\":[\"course_id\"],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"striped\":true,\"compact\":true,\"dataKey\":\"e9fc15f3a53a06ad3569f7b3f70a31cd\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nIn this case, all the columns which are not `aggregate`d remain hidden. Clicking the little triangle in the `CID` column displays the hidden rows. Looks better, but again, the issue of duplicated data remains.\n\nYou can aggregate the second-level columns too, but this distorts the table and frankly, looks ugly. Here I aggregate the `SID` column in addition to all the other top-level columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data       = combined_df,\n  compact    = TRUE, # for minimum row height\n  filterable = TRUE, # for individual column filters\n  striped    = TRUE, # banded rows\n  resizable  = TRUE, # for resizable column widths\n  groupBy    = \"course_id\",\n  columns    = list(\n    course_id   = colDef(name = \"CID\",         width = 100,  align = \"left\",    aggregate = \"count\"),\n    course_name = colDef(name = \"Course Name\", width = 140,                     aggregate = \"unique\"),\n    start_date  = colDef(name = \"Start Date\",  width = 120,  align = \"center\",  aggregate = \"unique\"),\n    end_date    = colDef(name = \"End Date\",    width = 120,  align = \"center\",  aggregate = \"unique\"),\n    # YIKES!! Aggregating Student ID to show unique ids in each course.\n    s_id        = colDef(name = \"SID\",         width = 70,   align = \"center\",  aggregate = \"unique\"), \n    s_name      = colDef(name = \"Student Name\"),\n    gender      = colDef(name = \"Gender\",      width = 80,   align = \"center\"),\n    age         = colDef(name = \"Age\",         width = 50)\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-67b62794e33863e62991\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-67b62794e33863e62991\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4],\"course_name\":[\"Course A\",\"Course A\",\"Course A\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course B\",\"Course C\",\"Course C\",\"Course C\",\"Course C\",\"Course D\",\"Course D\",\"Course D\"],\"start_date\":[\"2021-01-01\",\"2021-01-01\",\"2021-01-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-02-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-03-01\",\"2021-04-01\",\"2021-04-01\",\"2021-04-01\"],\"end_date\":[\"2021-01-31\",\"2021-01-31\",\"2021-01-31\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-02-28\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-03-31\",\"2021-04-30\",\"2021-04-30\",\"2021-04-30\"],\"s_id\":[4,5,14,6,7,8,9,10,13,15,17,18,19,1,3,12,16,2,11,20],\"s_name\":[\"Student D\",\"Student E\",\"Student N\",\"Student F\",\"Student G\",\"Student H\",\"Student I\",\"Student J\",\"Student M\",\"Student O\",\"Student Q\",\"Student R\",\"Student S\",\"Student A\",\"Student C\",\"Student L\",\"Student P\",\"Student B\",\"Student K\",\"Student T\"],\"gender\":[\"X\",\"Y\",\"Y\",\"Y\",\"Y\",\"X\",\"Z\",\"Z\",\"Y\",\"Y\",\"Z\",\"X\",\"X\",\"X\",\"X\",\"X\",\"Z\",\"X\",\"X\",\"Z\"],\"age\":[22,19,21,25,20,18,27,28,21,35,22,21,19,21,30,25,30,22,32,35]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"CID\",\"type\":\"numeric\",\"aggregate\":\"count\",\"width\":100,\"align\":\"left\"},{\"accessor\":\"course_name\",\"name\":\"Course Name\",\"type\":\"character\",\"aggregate\":\"unique\",\"width\":140},{\"accessor\":\"start_date\",\"name\":\"Start Date\",\"type\":\"Date\",\"aggregate\":\"unique\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"end_date\",\"name\":\"End Date\",\"type\":\"Date\",\"aggregate\":\"unique\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"aggregate\":\"unique\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":80,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50}],\"pivotBy\":[\"course_id\"],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"striped\":true,\"compact\":true,\"dataKey\":\"51a6dfecd993aea3dbb11e027155fa81\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nWouldn't it be nice if we could display only the top-level columns by default and on clicking the small triangle for a row, show all the second-level columns corresponding to that row only, like a drill-down table?\n\nTo do this we need 2 separate tables. Earlier in this post, I said it is advisable to split such denormalized data into normalized data i.e. create the original top-level and second level tables from the `combined_df`. Let's recreate the 2 tables.\n\nI want to demonstrate how we go from the combined data to the 2 tables. Hence I will not use the `course` and `student` tables created earlier.\n\nCreating the `top_level` table using just the columns in `course`. Let's also create a new column `n_students` depicting count of students in each course.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_level <- combined_df %>% \n  # Only course info columns\n  count(course_id, course_name, start_date, end_date, name = \"n_students\") \n\npaged_table(top_level)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"course_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"course_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"start_date\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"end_date\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"n_students\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Course A\",\"3\":\"2021-01-01\",\"4\":\"2021-01-31\",\"5\":\"3\"},{\"1\":\"2\",\"2\":\"Course B\",\"3\":\"2021-02-01\",\"4\":\"2021-02-28\",\"5\":\"10\"},{\"1\":\"3\",\"2\":\"Course C\",\"3\":\"2021-03-01\",\"4\":\"2021-03-31\",\"5\":\"4\"},{\"1\":\"4\",\"2\":\"Course D\",\"3\":\"2021-04-01\",\"4\":\"2021-04-30\",\"5\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsecond_level <- combined_df %>% \n  # Only Student info columns with unique identifier for Course\n  select(course_id, s_id, s_name, gender, age) %>% \n  arrange(s_id)\n\npaged_table(second_level)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"course_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"s_id\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"s_name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"3\",\"2\":\"1\",\"3\":\"Student A\",\"4\":\"X\",\"5\":\"21\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"Student B\",\"4\":\"X\",\"5\":\"22\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"Student C\",\"4\":\"X\",\"5\":\"30\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"Student D\",\"4\":\"X\",\"5\":\"22\"},{\"1\":\"1\",\"2\":\"5\",\"3\":\"Student E\",\"4\":\"Y\",\"5\":\"19\"},{\"1\":\"2\",\"2\":\"6\",\"3\":\"Student F\",\"4\":\"Y\",\"5\":\"25\"},{\"1\":\"2\",\"2\":\"7\",\"3\":\"Student G\",\"4\":\"Y\",\"5\":\"20\"},{\"1\":\"2\",\"2\":\"8\",\"3\":\"Student H\",\"4\":\"X\",\"5\":\"18\"},{\"1\":\"2\",\"2\":\"9\",\"3\":\"Student I\",\"4\":\"Z\",\"5\":\"27\"},{\"1\":\"2\",\"2\":\"10\",\"3\":\"Student J\",\"4\":\"Z\",\"5\":\"28\"},{\"1\":\"4\",\"2\":\"11\",\"3\":\"Student K\",\"4\":\"X\",\"5\":\"32\"},{\"1\":\"3\",\"2\":\"12\",\"3\":\"Student L\",\"4\":\"X\",\"5\":\"25\"},{\"1\":\"2\",\"2\":\"13\",\"3\":\"Student M\",\"4\":\"Y\",\"5\":\"21\"},{\"1\":\"1\",\"2\":\"14\",\"3\":\"Student N\",\"4\":\"Y\",\"5\":\"21\"},{\"1\":\"2\",\"2\":\"15\",\"3\":\"Student O\",\"4\":\"Y\",\"5\":\"35\"},{\"1\":\"3\",\"2\":\"16\",\"3\":\"Student P\",\"4\":\"Z\",\"5\":\"30\"},{\"1\":\"2\",\"2\":\"17\",\"3\":\"Student Q\",\"4\":\"Z\",\"5\":\"22\"},{\"1\":\"2\",\"2\":\"18\",\"3\":\"Student R\",\"4\":\"X\",\"5\":\"21\"},{\"1\":\"2\",\"2\":\"19\",\"3\":\"Student S\",\"4\":\"X\",\"5\":\"19\"},{\"1\":\"4\",\"2\":\"20\",\"3\":\"Student T\",\"4\":\"Z\",\"5\":\"35\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## The final Drill-down Table\n\nNow that we have the 2 tables ready, let us now create the final `{reactable}`. The trick here is to use the **details** argument to which we pass another `{reactable}` of just the rows with students data corresponding to given course.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data       = top_level,\n  compact    = TRUE, # for minimum row height\n  filterable = TRUE, # for individual column filters\n  striped    = TRUE, # banded rows\n  resizable  = TRUE, # for resizable column widths\n  columns    = list(\n    course_id   = colDef(name = \"CID\",             width = 50,  align = \"center\"),\n    course_name = colDef(name = \"Course Name\"), \n    start_date  = colDef(name = \"Start Date\",      width = 120, align = \"center\"),\n    end_date    = colDef(name = \"End Date\",        width = 120, align = \"center\"),\n    n_students  = colDef(name = \"No. of Students\", width = 130, align = \"center\")\n  ),\n  details = function(index) { # index is the row number of current row.\n    # sub-table of only those students for current row.\n    sec_lvl = second_level[second_level$course_id == top_level$course_id[index], ] \n    reactable(data       = sec_lvl,\n              compact    = TRUE, \n              filterable = TRUE,\n              bordered   = TRUE, \n              resizable  = TRUE,\n              columns    = list(\n                course_id   = colDef(show = FALSE), # hide the course id column\n                s_id        = colDef(name = \"SID\",    width = 70, align = \"center\"),\n                s_name      = colDef(name = \"Student Name\"),\n                gender      = colDef(name = \"Gender\", width = 90, align = \"center\"),\n                age         = colDef(name = \"Age\",    width = 50, align = \"center\")\n              )\n              )\n  }\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-5a0cb435521fcff53b1c\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5a0cb435521fcff53b1c\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,2,3,4],\"course_name\":[\"Course A\",\"Course B\",\"Course C\",\"Course D\"],\"start_date\":[\"2021-01-01\",\"2021-02-01\",\"2021-03-01\",\"2021-04-01\"],\"end_date\":[\"2021-01-31\",\"2021-02-28\",\"2021-03-31\",\"2021-04-30\"],\"n_students\":[3,10,4,3]},\"columns\":[{\"accessor\":\".details\",\"name\":\"\",\"type\":\"NULL\",\"sortable\":false,\"resizable\":false,\"filterable\":false,\"searchable\":false,\"width\":45,\"align\":\"center\",\"details\":[{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[1,1,1],\"s_id\":[4,5,14],\"s_name\":[\"Student D\",\"Student E\",\"Student N\"],\"gender\":[\"X\",\"Y\",\"Y\"],\"age\":[22,19,21]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"course_id\",\"type\":\"numeric\",\"show\":false},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":90,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"bordered\":true,\"compact\":true,\"dataKey\":\"12036566002706ab50f66831a92eae32\",\"nested\":true},\"children\":[]},{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[2,2,2,2,2,2,2,2,2,2],\"s_id\":[6,7,8,9,10,13,15,17,18,19],\"s_name\":[\"Student F\",\"Student G\",\"Student H\",\"Student I\",\"Student J\",\"Student M\",\"Student O\",\"Student Q\",\"Student R\",\"Student S\"],\"gender\":[\"Y\",\"Y\",\"X\",\"Z\",\"Z\",\"Y\",\"Y\",\"Z\",\"X\",\"X\"],\"age\":[25,20,18,27,28,21,35,22,21,19]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"course_id\",\"type\":\"numeric\",\"show\":false},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":90,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"bordered\":true,\"compact\":true,\"dataKey\":\"6587f2ad3dcb0fcc5216bf4473c986a0\",\"nested\":true},\"children\":[]},{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[3,3,3,3],\"s_id\":[1,3,12,16],\"s_name\":[\"Student A\",\"Student C\",\"Student L\",\"Student P\"],\"gender\":[\"X\",\"X\",\"X\",\"Z\"],\"age\":[21,30,25,30]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"course_id\",\"type\":\"numeric\",\"show\":false},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":90,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"bordered\":true,\"compact\":true,\"dataKey\":\"e3963514a17cdadfff8af46fde214632\",\"nested\":true},\"children\":[]},{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"course_id\":[4,4,4],\"s_id\":[2,11,20],\"s_name\":[\"Student B\",\"Student K\",\"Student T\"],\"gender\":[\"X\",\"X\",\"Z\"],\"age\":[22,32,35]},\"columns\":[{\"accessor\":\"course_id\",\"name\":\"course_id\",\"type\":\"numeric\",\"show\":false},{\"accessor\":\"s_id\",\"name\":\"SID\",\"type\":\"numeric\",\"width\":70,\"align\":\"center\"},{\"accessor\":\"s_name\",\"name\":\"Student Name\",\"type\":\"character\"},{\"accessor\":\"gender\",\"name\":\"Gender\",\"type\":\"character\",\"width\":90,\"align\":\"center\"},{\"accessor\":\"age\",\"name\":\"Age\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"bordered\":true,\"compact\":true,\"dataKey\":\"5a3a2a276df6d52409d68b95331871bb\",\"nested\":true},\"children\":[]}]},{\"accessor\":\"course_id\",\"name\":\"CID\",\"type\":\"numeric\",\"width\":50,\"align\":\"center\"},{\"accessor\":\"course_name\",\"name\":\"Course Name\",\"type\":\"character\"},{\"accessor\":\"start_date\",\"name\":\"Start Date\",\"type\":\"Date\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"end_date\",\"name\":\"End Date\",\"type\":\"Date\",\"width\":120,\"align\":\"center\"},{\"accessor\":\"n_students\",\"name\":\"No. of Students\",\"type\":\"numeric\",\"width\":130,\"align\":\"center\"}],\"resizable\":true,\"filterable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"striped\":true,\"compact\":true,\"dataKey\":\"4234130aace77d06280744fa5876f205\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nSince the sub-table is also a `{reactable}`, you can go another level down... and another, but please do consider the usability aspect of this feature before taking that decision. I haven't tried going beyond 2 levels of data myself. Maybe a part 2 to this post??\n\n## Conclusion\n\nDrill-down tables let you pack a lot of data in a compact manner and allow use by multiple audiences interested in varying degrees/levels of information. `{reactable}` can help create an interactive data table from tabular data with sorting and pagination by default. The data table is an HTML widget that can be used in R Markdown documents and Shiny applications, or viewed from an R console. A lot of features can be enabled/disabled using the basic arguments of the `reactable()` function and much more using custom JavaScript.\n\n## References & Citations\n\n-   Greg Lin (2020). reactable: Interactive Data Tables Based on 'React Table'. R package version 0.2.3. https://CRAN.R-project.org/package=reactable\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react-dom.min.js\"></script>\r\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\r\n<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}